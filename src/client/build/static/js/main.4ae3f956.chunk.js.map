{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","calcResult","operation","x","y","display","history","socket","io","reconnectionDelay","reconnection","reconnectionAttemps","transports","agent","upgrade","rejectUnauthorized","this","on","newHistory","console","log","_","isArray","setState","prevState","data","value","this_equation_result","evaluateCalculation","op","isNumeric","n","isNaN","parseFloat","isFinite","includes","validate_equation","toNumber","result","NaN","isEqual","emit","classes","props","className","root","Grid","calculatorKeys","container","spacing","item","xs","Fragment","Typography","calRow","Button","color","onClick","handleNumber","handleOp","clearCalc","Card","CardActionArea","CardContent","gutterBottom","variant","component","TextareaAutosize","rowsMax","aria-label","placeholder","join","React","Component","withStyles","theme","flexGrow","alignContent","marginInline","marginTop","maxWidth","flexFlow","textAlign","textAlignLast","backgroundColor","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae3f956.chunk.js","sourcesContent":["import React from \"react\";\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\n\nimport _ from 'lodash';\n\nimport { io } from \"socket.io-client\";\nconst SERVER = \"http://localhost:8080\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    alignContent: \"center\",\n    marginInline: \"auto\",\n    marginTop: 40\n  },\n  calculatorKeys: {\n    flexGrow: 1,\n    alignContent: \"center\",\n    marginInline: \"auto\",\n    marginTop: 40,\n    maxWidth: \"40%\",\n  },\n  calRow: {\n    flexFlow: \"nowrap\",\n  },\n  display: {\n    flexGrow: 1,\n    alignContent: \"center\",\n    marginInline: \"auto\",\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    backgroundColor: \"gainsboro\",\n    padding: 2\n  }\n});\n\nclass App extends React.Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      calcResult: \"\",\n      operation: \"\",\n      x: \"\",\n      y: \"\",\n      display: \"\",\n      history: []\n    };\n\n    this.socket = io(SERVER, {\n        reconnectionDelay: 1000,\n        reconnection: true,\n        reconnectionAttemps: 10,\n        transports: ['websocket'],\n        agent: false,\n        upgrade: false,\n        rejectUnauthorized: false\n    });\n  }\n\n  componentDidMount() {\n    this.socket.on(\"history_update\", (newHistory) => {\n      console.log(\"New History: \", newHistory);\n\n      if(_.isArray(newHistory.history)) {\n        this.setState(\n          prevState => ({\n            history: newHistory.history\n          })\n        );\n      }\n    });\n\n    this.socket.on(\"connection\", (data) => {\n      console.log(data);\n    });\n  }\n\n  handleNumber(value) {\n    console.log(`${value}`);\n\n    if(!this.state.operation) {\n      this.setState(\n        prevState => ({\n          x: `${prevState.x}${value}`,\n          display: `${prevState.x}${value}`\n        })\n      );\n      console.log('Adding to X');\n    } else if(this.state.calcResult) {\n      this.setState(prevState => ({\n          x: `${value}`,\n          display: `${value}`,\n          y: \"\",\n          operation: \"\",\n          calcResult: \"\",\n        })\n      );\n      console.log('Adding to Y');\n    } else {\n      this.setState(prevState => ({\n          y: `${prevState.y}${value}`,\n          display: `${prevState.x} ${prevState.operation} ${prevState.y}${value}`\n        })\n      );\n      console.log('Adding to Y');\n    }\n  }\n\n  handleOp(value) {\n    console.log(`${value}`);\n    \n    if(!this.state.operation) {\n      this.setState(prevState => ({\n          operation: `${value}`,\n          display: `${prevState.x} ${value}`\n        })\n      );\n    } else {\n      let this_equation_result = this.state.calcResult ? this.state.calcResult + '' : this.evaluateCalculation();\n\n      this.setState(prevState => ({\n          x: this_equation_result,\n          y: \"\",\n          operation: `${value}`,\n          calcResult: \"\",\n          display: `${this_equation_result} ${value}`\n        })\n      );\n    }\n  }\n\n  clearCalc() {\n    this.setState(prevState => ({\n        x: \"\",\n        y: \"\",\n        operation: \"\",\n        calcResult: \"\",\n        display: \"0\"\n      })\n    );\n    console.log(\"Clearing all\");\n  }\n\n  validate_equation() {\n    let op = this.state.operation || \"\";\n    let x = this.state.x || \"\";\n    let y = this.state.y || \"\";\n\n    function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if (isNumeric(x) && isNumeric(y) && _.includes('/*-+', op)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  evaluateCalculation() {\n    if(!this.validate_equation()) {\n      return false;\n    }\n\n    let op = this.state.operation || \"\";\n    let x = _.toNumber(this.state.x);\n    let y = _.toNumber(this.state.y);\n\n    // TODO: send this to the backend for calculations\n    let result = NaN;\n\n    if (_.isEqual(\"+\",op)) {\n      result = x + y;\n    } else if (_.isEqual(\"-\",op)) {\n      result = x - y;\n    } else if (_.isEqual(\"*\",op)) {\n      result = x * y;\n    } else if (_.isEqual(\"/\",op)) {\n      result = x / y;\n    }\n\n    if (!_.isNaN(result)) {\n      this.setState(prevState => ({\n          calcResult: `${result}`,\n          display: `${prevState.x} ${prevState.operation} ${prevState.y} = ${result}`\n        })\n      );\n\n      this.socket.emit(\"new_operation\", { \n        op: op,\n        x: x,\n        y: y,\n        result: result\n      });\n\n      return result;\n    }\n\n    return false;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid className={classes.calculatorKeys} container spacing={1}>\n          <Grid container item xs={12} spacing={1}>\n            <React.Fragment>\n                <Typography className={classes.display}>\n                  {this.state.display || 0}\n                </Typography>\n            </React.Fragment>\n          </Grid>\n          <Grid className={classes.calRow} container item xs={12} spacing={1}>\n            <React.Fragment>\n                <Button color=\"primary\" onClick={() => this.handleNumber('1')}>1</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('2')}>2</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('3')}>3</Button>\n                <Button color=\"primary\" onClick={() => this.handleOp('-')}>-</Button>\n            </React.Fragment>\n          </Grid>\n          <Grid className={classes.calRow} container item xs={12} spacing={1}>\n            <React.Fragment>\n                <Button color=\"primary\" onClick={() => this.handleNumber('4')}>4</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('5')}>5</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('6')}>6</Button>\n                <Button color=\"primary\" onClick={() => this.handleOp('+')}>+</Button>\n            </React.Fragment>\n          </Grid>\n          <Grid className={classes.calRow} container item xs={12} spacing={1}>\n            <React.Fragment>\n                <Button color=\"primary\" onClick={() => this.handleNumber('7')}>7</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('8')}>8</Button>\n                <Button color=\"primary\" onClick={() => this.handleNumber('9')}>9</Button>\n                <Button color=\"primary\" onClick={() => this.handleOp('*')}>*</Button>\n            </React.Fragment>\n          </Grid>\n          <Grid className={classes.calRow} container item xs={12} spacing={1}>\n            <React.Fragment>\n                <Button color=\"primary\" onClick={() => this.handleNumber('0')}>0</Button>\n                <Button color=\"primary\" onClick={() => this.clearCalc()}>C</Button>\n                <Button color=\"primary\" onClick={() => this.evaluateCalculation()}>=</Button>\n                <Button color=\"primary\" onClick={() => this.handleOp('/')}>/</Button>\n            </React.Fragment>\n          </Grid>\n        </Grid>\n        <Grid container item xs={12} spacing={1}>\n            <React.Fragment>\n              <Grid item xs={12}>\n              <Card>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      History\n                    </Typography>\n                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                      {this.state.history.join('\\r\\n')}\n                    </Typography> */}\n                    <TextareaAutosize\n                      rowsMax={11}\n                      aria-label=\"maximum height\"\n                      placeholder=\"History\"\n                      value={this.state.history.join('\\r\\n')}\n                    />\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n              </Grid>\n            </React.Fragment>\n          </Grid>\n      </div>\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}